#!/bin/bash
# pre-commit git hook to check the validity of a puppet manifest
#
# Prerequisites:
#   gem install puppet-lint puppet
#
# Install:
#  /path/to/repo/.git/hooks/pre-commit
#
# Original:
#  blog: http://techblog.roethof.net/puppet/a-puppet-git-pre-commit-hook-is-always-easy-to-have/
#
# Authors:
#  Ronny Roethof
#  Mattias Geniar <m@ttias.be>
 
echo "### Checking puppet syntax, for science! ###"
for file in `git diff --name-only --cached | grep -E '\.(pp)$'`
do
    # Only check new/modified files
    if [[ -f $file ]]
    then
        puppet-lint \
            --no-2sp_soft_tabs-check \
            --no-trailing_whitespace-check \
            --no-hard_tabs-check \
            --no-80chars-check \
            --no-autoloader_layout-check \
            --no-nested_classes_or_defines-check \
            --no-single_quote_string_with_variables-check \
            --with-filename $file
 
        # Set us up to bail if we receive any syntax errors
        if [[ $? -ne 0 ]]
        then
            syntax_is_bad=1
        else
            echo "$file looks good"
        fi
    fi
done
echo ""
 
echo "### Checking if puppet manifests are valid ###"
# validating the whole manifest takes too long. uncomment this
# if you want to test the whole shebang.
# for file in `find . -name "*.pp"`
for file in `git diff --name-only --cached | grep -E '\.(pp)$'`
do
    if [[ -f $file ]]
    then
        puppet parser validate --color=true $file
        if [[ $? -ne 0 ]]
        then
            echo "ERROR: puppet parser failed at: $file"
            syntax_is_bad=1
        else
            echo "OK: $file looks valid"
        fi
    fi
done
echo ""
 
echo "### Checking if ruby template syntax is valid ###"
#echo "temp disabled due to erroneous error"
for file in `git diff --name-only --cached | grep -E '\.(erb)$'`
do
    if [[ -f $file ]]
    then
        erb -P -x -T '-' $file | ruby -c
        if [[ $? -ne 0 ]]
        then
            echo "ERROR: ruby template parser failed at: $file"
            syntax_is_bad=1
        else
            echo "OK: $file looks like a valid ruby template"
        fi
    fi
done
echo ""

if [[ $syntax_is_bad -eq 1 ]]
then
    echo "FATAL: Syntax is bad. See above errors"
    echo "Bailing"
    exit 1
else
    echo "Everything looks good."
fi
